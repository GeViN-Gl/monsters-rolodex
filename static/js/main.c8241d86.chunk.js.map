{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","getMonsters","url","a","fetch","responce","ok","Error","status","json","data","console","error","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLXC,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNZO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCDVG,G,wDACJ,aAAe,IAAD,8BACZ,gBA4BFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA5BtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OACZI,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEOC,MAAMF,GAFb,WAEVG,EAFU,QAGFC,GAHE,yCAGS,IAAIC,MAAJ,cAAyBF,EAASG,SAH3C,uBAIGH,EAASI,OAJZ,OAIVC,EAJU,OAMhB,EAAKd,SAAS,CAAET,SAAUuB,IANV,kDAQhBC,QAAQC,MAAR,qBARgB,0DAAH,sDAYjBX,EAAY,gD,oBAWd,WACE,MAAkCY,KAAKb,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAEZiB,EAAkB3B,EAAS4B,QAAO,SAAClC,GAAD,OACtCA,EAAQG,KAAKgC,cAAcC,SAASpB,EAAYmB,kBAGlD,OACE,sBAAKrC,UAAU,MAAf,UACE,oBAAIA,UAAU,SAAd,6BACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAcsB,KAAKtB,eAC5D,cAAC,EAAD,CAAUJ,SAAU2B,W,GA7CVI,cAmDHxB,IC/CAyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8241d86.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.scss\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\n\nimport \"./card-list.styles.scss\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.scss\";\n\nexport const Searchbox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Searchbox } from \"./components/search-box/search-box.component\";\n\n// import logo from \"./logo.svg\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const getMonsters = async (url) => {\n      try {\n        const responce = await fetch(url);\n        if (!responce.ok) return new Error(`fetch fail `, responce.status);\n        const data = await responce.json();\n\n        this.setState({ monsters: data });\n      } catch (err) {\n        console.error(`Fecth fail: `, err);\n      }\n    };\n\n    getMonsters(\"https://jsonplaceholder.typicode.com/users\");\n\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then((responce) => responce.json())\n    //   .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">Monster Rolodex</h1>\n        <Searchbox placeholder=\"search monsters\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}